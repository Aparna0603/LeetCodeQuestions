class Solution {
    public String robotWithString(String s) {
        StringBuilder p = new StringBuilder();
        Stack<Character> t = new Stack<>();
        int n = s.length();

    
        char[] minChar = new char[n];
        minChar[n - 1] = s.charAt(n - 1);
        for (int i = n - 2; i >= 0; i--) {
            minChar[i] = (char)Math.min(s.charAt(i), minChar[i + 1]);
        }

        for (int i = 0; i < n; i++) {
            t.push(s.charAt(i));
            while (!t.isEmpty() && t.peek() <= minChar[i == n - 1 ? i : i + 1]) {
                p.append(t.pop());
            }
        }

        while (!t.isEmpty()) {
            p.append(t.pop());
        }

        return p.toString();
    }
}

class Solution {
    public String pushDominoes(String dominoes) {
        int[] prevRightPos = new int[dominoes.length()];
        char[] res = new char[dominoes.length()];
        
      
        int prevRight = -1;
        for (int i=0; i<dominoes.length(); i++){
            if (dominoes.charAt(i) == 'R'){
                prevRight = i;
                res[i] = 'R';
            }else if (dominoes.charAt(i) == 'L'){
                prevRight = -1;
                res[i] = 'L';
            }

            prevRightPos[i] = prevRight;
        }
        
     
        int nextLeft = -1;
        for (int i=dominoes.length()-1; i>=0; i--){
            if (dominoes.charAt(i) == 'L'){
                nextLeft = i;
            }else if (dominoes.charAt(i) == 'R'){
                nextLeft = -1;
            }else{
                if (prevRightPos[i] == -1 && nextLeft == -1){
                    res[i] = '.';
                }else if (prevRightPos[i] != -1 && nextLeft == -1){
                    res[i] = 'R';
                }else if (prevRightPos[i] == -1 && nextLeft != -1){
                    res[i] = 'L';
                }else{
                    int leftDist = i - prevRightPos[i];
                    int rightDist = nextLeft - i;

                    if (leftDist == rightDist) res[i] = '.';
                    else if (leftDist < rightDist) res[i] = 'R';
                    else res[i] = 'L';
                }
            }

        }

        return new String(res);
    }
}

class Solution {

    // Warm-up block runs once when class loads
    // static {
    //    Solution sol = new Solution();
    //    for (int i = 0; i < 100; i++) {
    //        sol.longestPalindrome(new String[]{"lc", "cl", "gg"});
    //    }

    public int longestPalindrome(String[] words) {
        HashMap<String, Integer> map = new HashMap<>();
        int result = 0;
        for (String word : words) {
            String reverse = "" + word.charAt(1) + word.charAt(0);
            if (map.getOrDefault(reverse, 0) > 0) {
                result += 4;
                map.put(reverse, map.get(reverse) - 1);
            } else {
                map.put(word, map.getOrDefault(word, 0) + 1);
            }
        }
        for (String key : map.keySet()) {
            if (key.charAt(0) == key.charAt(1) && map.get(key) > 0) {
                result += 2;
                break;
            }
        }
        return result;
    }
}
